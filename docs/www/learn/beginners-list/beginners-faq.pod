=head1 NAME

beginners-faq - FAQ for the beginners mailing list

=head1 1 -  Administriva

=head2 1.1 - I'm not subscribed - how do I subscribe?

Send mail to <beginners-subscribe@perl.org>

You can also specify your subscription email address by sending email to
(assuming foo@bar.com is your email address):

<beginners-subscribe-foo=bar.com@perl.org>.

=head2 1.2 -  How do I unsubscribe?

Now, why would you want to do that?
Send mail to <beginners-unsubscribe@perl.org>, and wait for a response.
Once you reply to the response, you'll be unsubscribed. If that doesn't work,
find the email address which you are subscribed from and send an email like the
following (let's assume your email is foo@bar.com):

<beginners-unsubscribe-foo=bar.com@perl.org>

=head2 1.3 - There is too much traffic on this list. Is there a digest?

Yes. To subscribe to the digest version of this list send an email to:

<beginners-digest-subscribe@perl.org>

To unsubscribe from the digest, send an email to:

<beginners-digest-unsubscribe@perl.org>

This B<is> a high traffic list (100+ messages per day), so please subscribe in
the way which is best for you.

=head2 1.4 - Is there an archive on the web?

Yes, there is. It is located at:

http://archive.develooper.com/beginners%40perl.org/

=head2 1.5 - How can I get this FAQ?

This document will be emailed to the list once a week, and will be available
online in the archives, and at http://learn.perl.org/

=head2 1.6 - I don't see something in the FAQ, how can I make a suggestion?

Send an email to <beginners-faq@perlguy.com> with your suggestion.

=head2 1.7 - Is there a supporting website for this list?

Yes, there is. It is located at:

http://beginners.perl.org/

=head2 1.8 - Who do I complain to?

You can send complaints to <beginners-workers@perl.org>

=head2 1.9 - Who currently maintains the FAQ?

Kevin Meltzer, who can be reached at the email address (for FAQ suggestions
only) in question 1.6

=head2 1.10 - Who will maintain peace and flow on the list?

Casey West, Kevin Meltzer and Ask Bjoern Hansen currently carry large, yet
padded, clue-sticks to maintain peace and order on the list. If you are
privately emailed by one of these folks for flaming, being off-topic, etc...
please listen to what they say. If you see a message sent to the list by one
of these people saying that a thread is closed, B<do not> continue to post to
the list on that thread! If you do, you will not only meet face to face with a
XQJ-37 nuclear powered pansexual roto-plooker, but you may also be taken off of
the list. These people simply want to make sure the list stays topical, and
above-all, useful to Perl beginners.

=head2 1.11 - When was this FAQ last updated?

Feb 04, 2004

=head1 2 -  Questions about the 'beginners' list.

=head2 2.1 - What is the list for?

A list for beginning Perl programmers to ask questions in a friendly
atmosphere.

=head2 2.2 - What is this list _not_ for?

=over 4

=item * SPAM

=item * Homework

=item * Solicitation

=item * Things that aren't Perl related

=item * Monkeys

=item * Monkeys solicitating homework on non-Perl related SPAM.

=back

=head2 2.3 - Are there any rules?

Yes. As with most communities, there are rules. Not many, and ones that
shouldn't
need to be mentioned, but they are.

=over 4

=item * Be nice

=item * No flaming

=item * Have fun

=back

=head2 2.4 - What topics are allowed on this list?

Basically, if it has to do with Perl, then it is allowed. You can ask CGI,
networking, syntax, style, etc... types of questions. If your question has
nothing at all to do with Perl, it will likely be ignored. If it has anything
to do with Perl, it will likely be answered.

=head2 2.5 - I want to help, what should I do?

Subscribe to the list! If you see a question which you can give an idiomatic
and Good answer to, answer away! If you do not know the answer, wait for
someone
to answer, and learn a little.

=head2 2.6 - Is there anything I should keep in mind while answering?

We don't want to see 'RTFM'. That isn't very helpful. Instead, guide the
beginner to the place in the FM they should R :)

Please do not quote the documentation unless you have something to add to it.
It is better to direct someone to the documentation so they hopefully will read
documentation above and beyond that which answers their question. It also helps
teach them how to use the documentation.

=head2 2.7 - I don't want to post a question if it is in an FAQ. Where should I
look first?

Look in the FAQ! Get acquainted with the 'perldoc' utility, and use it. It can
save everyone time if you look in the Perl FAQs first, instead of having a list
of
people refer you to the Perl FAQs :) You can learn about 'perldoc' by typing:

C<perldoc perldoc>

At your command prompt. You can also view documentation online at:

http://perldoc.perl.org

=head2 2.8 Is this a high traffic list?

YES! You have been warned! If you don't want to get ~100 emails per day from
this list, consider subscribing to the digest.

=head2 2.9 Other tips before posting to the list

=over 4

=item * Check the FAQs first

=item * Don't send questions asking "... will this work?". Try it first, then
report errors and ask the list why it *didn't* work. A good answer to "will
this work?", is "What happened when you tried it?".


=item * If your email begins with "I know this isn't the right place to ask
this, but...", don't send it to this list :) If you know it doesn't belong,
send it to where it does.


=item * Check the FAQs first


=item * Look at the archives,
(http://archive.develooper.com/beginners@perl.org/) to see if your question has
already been answered on the list.


=item * Have meaningful Subjects. Subject lines like "Help!", and "This
isn't working!" may be skipped by many people, and you may not get all the
great help you want. Try to make your subject lines meaningful. For example,
"sprintf() trouble", or "Confused about formats". 


=back

=head2 2.10 Can I ask the list for a code review?

Sure. However, we request two things when doing so. First, that you put code
somewhere on the web for people to look at it, instead of posting it to the
list itself. Secondly, we request that people do not post their suggestions 
to the list, but rather the requester create a summary of suggestions and
comments given, and post that to the list. This, in itself, could help other
list members see things you did, and later changed due to suggestions.

=head1 3 - Other Resources

=head2 3.1 - What other websites may be useful to a beginner ?

=over 4

=item * Perl.org - http://www.perl.org  

=item * Perl Home Page - http://www.perl.com

=item * PerlMonks   - http://www.perlmonks.org

=item * Perldoc - http://perldoc.perl.org

=item * Perl Archives   - http://www.perlarchives.com

=item * NMS Archive - http://nms-cgi.sourceforge.net/ 

=item * Unofficial Perl Beginners' Site - http://perl-begin.berlios.de

=back

=head2 3.2 - What resources may be harmful to a beginner?

Beware of Perl4-like code-- You might find some script archives and
unauthorized mirrors with old Perl4 versions of Selena Sol and Matt Wright
scripts. Don't use those scripts. They are outdated and may even in some
cases contain bugs or security problems since many may not have been updated
in years. Instead, double-check the master archives at:

Selena Sol (Perl4 and Perl5):
http://www.extropia.com/

Matt Wright's Scripts Archive (All Perl 4)
http://www.worldwidemart.com/scripts/

When looking at scripts, remember the guidlines in 3.3, below, to make an informed decision
if a script is one you should be using, or learning from.

=head2 3.3 - How do I determine whether a script I download is a good one?

There are various criterea which can assist you in determining if a script
you download is a good one. We generally recommend that beginners do not learn
from Perl 4 scripts, or ones which may introduce bad habits. So, here are some
tips on spotting the good code:

=over 4

=item * Uses taint mode by default (probably indicates an awareness of security
issues).

=item * Uses strict, warnings and other tools that enable clean coding practices

=item * Uses proper scoping (ie, using my and local where appropriate)

=item *  Use of CGI.pm instead of cgi-lib.pl (cgi-lib.pl is usually a giveaway
that a CGI script is written in the days of Perl 4)

=item *  Modular use of code (modules or classes) instead of monolithic script

=back

If you are ever in doubt, ask!

=head2 3.4 - What books would be good?

=over 4

=item * Programming Perl, 3rd Ed. by Larry Wall, et al. (O'Reilly)

=item * Learning Perl, 3rd Ed. by Randal Schwartz, et al. (O'Reilly)

=item * Perl Cookbook, by Nat Torkington/Tom Christiansen (O'Reilly)

=item * Mastering Regular Expressions, by Jeffrey Friedl (O'Reilly)

=item * Effective Perl Programming, by Joseph N. Hall (Addison-Wesley)

=item * Network Programming with Perl, by Lincoln Stein (Addison-Wesley)

=item * Writing CGI Applications with Perl, by Kevin Meltzer/Brent Michalski
(Addison-Wesley)

=item * Object Oriented Perl, by Damian Conway (Manning)

=item * Elements of Perl Programming, by Andrew Johnson (Manning)

=item * Data Munging with Perl, by Dave Cross (Manning)

=item * Teach Yourself Perl in 24 Hours, by Clinton Pierce (Sams)

=item * Beginning Perl, by Simon Cozens (Wrox)

=back

=head2 3.5 I use IRC, any helpful Perl channels out there?

Glad you asked! There is indeed a place where you can ask all your Perl
questions on IRC.

=over 4

=item Network: irc.rhizomatic.net

=item Channel: #perl-help

=back

=head1 4 - Think Before Posting!

Please always think before you write; when you write you are taking
the time of over a thousand people.

If what you write takes just 30 seconds to read, that's more than
8 hours(!) of time burned that could have been used writing code. :)

So please keep the following things in mind when posting:

=over 4

=item * Before you write a question please make sure you've checked
all the FAQs and the documentation you know of.

=item * Before you write an answer, make sure you that you really are
contributing to a solution and doublecheck that noone
else already gave the same answer.

=item * If your question is about LWP (accessing webpages from Perl), DBI
(accessing databases from Perl) or CGI (you know what that is
:-) ) there are other mailinglists you should use.

    Subscribe by sending mail to:
    libwww-subscribe@perl.org
    dbi-users-subscribe@perl.org
    beginners-cgi-subscribe@perl.org

They all have digest versions too. You can subscribe to those by
inserting -digest just before -subscribe, for example
dbi-users-digest-subscribe@perl.org.           

=item * If you think what you are writing may be taken in a way you didn't
intend, please add a smiley :-) Many flame wars are stopped by a simple smiley!

=item * No flames. If your fingers are burning as you are typing the email, it
would likely be best not to send it.

=back

__END__
